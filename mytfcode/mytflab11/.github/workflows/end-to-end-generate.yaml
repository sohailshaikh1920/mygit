#
# Copyright (c) Microsoft Corporation
# Licensed under the MIT License.
#

name: end-to-end-generate

on:
  pull_request:
    branches:
      - bootstrap
      - end2end
  workflow_run:
    workflows: [end-to-end]
    types:
      - completed
  push:
    branches:
      - bootstrap
      - end2end

permissions:
  id-token: write
  contents: read


concurrency: 
  group: ${{ github.ref }}
  cancel-in-progress: true
env:
  LZ_REPO: 'https://github.com/Azure/caf-terraform-landingzones.git'
  LZ_BRANCH: 'fix.bootstrap_order'
  CAF_ENVIRONMENT: contoso

jobs:

  environment:
    name: Setup dynamic environment variables
    runs-on: [self-hosted, platform]
    outputs:
      terraform_code_repository: ${{ steps.set_env.outputs.terraform_code_repository }}
      terraform_code_ref: ${{ steps.set_env.outputs.terraform_code_ref }}
      environment: ${{ steps.set_env.outputs.environment }}
    steps:
      - name: Set environment variables for re-usable workflows
        id: set_env
        run: |
          echo "::set-output name=terraform_code_repository::$LZ_REPO"
          echo "::set-output name=terraform_code_ref::$LZ_BRANCH"
          echo "::set-output name=environment::$CAF_ENVIRONMENT"

  generate_definition_files:
    if: always()
    uses: ./.github/workflows/generate-definition-files.yaml
    needs: [environment]
    concurrency: 
      group: generate_definition_files
    permissions:
      id-token: write
      contents: write
    secrets:
      BOOTSTRAP_TOKEN: ${{ secrets.BOOTSTRAP_TOKEN }}
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_MANAGEMENT_SUBSCRIPTION_ID: ${{ secrets.AZURE_MANAGEMENT_SUBSCRIPTION_ID }}
      AZURE_CONNECTIVITY_SUBSCRIPTION_ID: ${{ secrets.AZURE_CONNECTIVITY_SUBSCRIPTION_ID }}
      AZURE_IDENTITY_SUBSCRIPTION_ID: ${{ secrets.AZURE_IDENTITY_SUBSCRIPTION_ID }}
      AZURE_SECURITY_SUBSCRIPTION_ID: ${{ secrets.AZURE_SECURITY_SUBSCRIPTION_ID }}
      AZURE_TARGET_SUBSCRIPTION_ID: ${{ secrets.AZURE_TARGET_SUBSCRIPTION_ID }}
      RUNNER_REGISTRATION_TOKEN: ${{ secrets.RUNNER_REGISTRATION_TOKEN }}
      RUNNER_NUMBERS: ${{ secrets.RUNNER_NUMBERS }}
      AZURE_OBJECT_ID: ${{ secrets.AZURE_OBJECT_ID }}
      ROVER_AGENT_DOCKER_IMAGE: ${{ secrets.ROVER_AGENT_DOCKER_IMAGE }}
    with:
      terraform_code_ref: ${{ needs.environment.outputs.terraform_code_ref }}
      terraform_code_repository: ${{ needs.environment.outputs.terraform_code_repository }}
      environment: ${{ needs.environment.outputs.environment }}

  configuration_updates:
    uses: ./.github/workflows/generate-configuration-files.yaml
    name: Generate configuration tfvars files
    permissions:
      id-token: write
      contents: write
    needs: [environment, generate_definition_files]
    concurrency: 
      group: configuration_updates
    secrets:
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_MANAGEMENT_SUBSCRIPTION_ID: ${{ secrets.AZURE_MANAGEMENT_SUBSCRIPTION_ID }}
      AZURE_TARGET_SUBSCRIPTION_ID: ${{ secrets.AZURE_MANAGEMENT_SUBSCRIPTION_ID }}
      RUNNER_REGISTRATION_TOKEN: ${{ secrets.RUNNER_REGISTRATION_TOKEN }}
      RUNNER_NUMBERS: ${{ secrets.RUNNER_NUMBERS }}
      AZURE_OBJECT_ID: ${{ secrets.AZURE_OBJECT_ID }}
    with:
      terraform_code_ref: ${{ needs.environment.outputs.terraform_code_ref }}
      terraform_code_repository: ${{ needs.environment.outputs.terraform_code_repository }}
      environment: ${{ needs.environment.outputs.environment }}
      # generate_pr: true
      # branch_name: bootstrap
      # target_branch: end2end
      # commit_description: Generation of configuration files for level1 and level2.
      
