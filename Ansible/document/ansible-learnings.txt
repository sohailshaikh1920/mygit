simple powerfull and agentless
docs.ansible.com
https://www.osboxes.org/ : for preconfigured os images
mobaxterm for ssh session manager
----------------------------------------------------------------------
controller node 

apt install ansible

default directory

sohail@ansiblecontroler:/etc/ansible$ ll
total 32
drwxrwxrwx   2 root root  4096 Dec 14 11:39 ./
drwxr-xr-x 100 root root  4096 Dec 14 11:39 ../
-rw-r--r--   1 root root 19985 Mar  5  2020 ansible.cfg
-rw-r--r--   1 root root   982 Dec 18  2018 hosts
sohail@ansiblecontroler:/etc/ansible$ pwd
/etc/ansible
sohail@ansiblecontroler:/etc/ansible$

for ssh passwordless login 

ssh-keygen -t rsa -b 4096
ssh-copy-id sohail@192.168.16.201
ssh sohail@192.168.16.201
------------------------------------------------------------------

target node

apt install python

-----------------------------------------------------------------

/etc/ansible/hosts<defaultinventoryfile>

node01 ansible_host=192.168.16.201 ansible_ssh_pass=root123
node02 ansible_host=192.168.16.202 ansible_ssh_pass=root123

ansible node01 -m<module> ping

playbook is written in yaml 

ansible all -a<module_argument> hostname -i<specificinventoryfile> filename.txt

[target]
node01 ansible_host=192.168.16.201 ansible_ssh_user=sohail ansible_ssh_pass=root123
node02 ansible_host=192.168.16.202

ansible target -a id

sohail@ansiblecontroler:~/ansible$ cat firstplaybook.yml<yaml or yml>
-
  name: ping test<name of play>
  hosts: target<host on which play is going to run>
  tasks:<task to be run in play>
    - name: ping test
      ping:<ansible module>

Ansible Modules :
system 
commands
files
database
cloud
windows
more

create file 

ansible node02 -m file -a "dest=/home/sohail/test.txt mode=700 state=touch"

core components :

controller node
managed node
module
inventory
task
playbook 

playbook to run sudo root user
sohail@ansiblecontroler:~/ansible$ cat secondplaybook.yaml
---

- name: install and start httpd
  hosts: target
  become: yes<default is root>
  tasks:
     - name: install httpd
       yum: name=webfs state=latest


     - name: start httpd
       service: name=webfs state=started
sohail@ansiblecontroler:~/ansible$ 

ansible-playbook secondplaybook.yaml --ask-become-pass

to get info about any node

ansible node01 -m setup

user of variables in playbook

sohail@ansiblecontroler:~/ansible$ cat fourthplaybook.yaml
---

- name: variables use
  hosts: target
  vars:
     dir: mydir
     file: myfile
  tasks:
     - name: create dir
       file:
          path: "/home/sohail/{{ dir }}"
          state: directory

     - name: create file
       file:
          path: "/home/sohail/{{ dir }}/{{ file }}"
          state: touch


sohail@ansiblecontroler:~/ansible$

Dynamic inventory:
is usefull when you want to popolate existing infrasture and work with that, it can be on any cloud or on-prem
there are 2 ways to do that one is plugin and second is script and both of them is available on ansible documentation
page

practice this with cloud inventory

defining variable in file and defining file in playbook

sohail@ansiblecontroler:~/ansible$ cat variables.yaml<can be any name with .yaml>
data: 
   dir: mydir
   file: myfile
sohail@ansiblecontroler:~/ansible$

sohail@ansiblecontroler:~/ansible$ cat fourthplaybook.yaml
---

- name: variables use
  hosts: target
  vars_files:
     - variables.yaml

  tasks:
     - name: create dir
       file:
          path: "/home/sohail/{{ data['dir'] }}"
          state: directory

     - name: create file
       file:
          path: "/home/sohail/{{ data['dir'] }}/{{ data['file'] }}"
          state: touch


sohail@ansiblecontroler:~/ansible$

variables from setup module output gathered by ansible

sohail@ansiblecontroler:~/ansible$ cat variablefromsetupmodule.yaml
---

- name: variables use
  hosts: target
  tasks:

     - name: print os
       debug:
          msg: " os is {{ ansible_facts<default name>['distribution<user attributes which is after _'] }}"

sohail@ansiblecontroler:~/ansible$

magic variables
check details on ansible site basically these are predefined varibles which can be leveraged in playbook

sohail@ansiblecontroler:~/ansible$ cat magic.yaml
---

- name: magic variable
  hosts: node01
  tasks:
     - name: avail variable
       debug:
               var: hostvars['node02']
sohail@ansiblecontroler:~/ansible$









